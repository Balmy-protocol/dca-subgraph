// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FeeRecipientSet extends ethereum.Event {
  get params(): FeeRecipientSet__Params {
    return new FeeRecipientSet__Params(this);
  }
}

export class FeeRecipientSet__Params {
  _event: FeeRecipientSet;

  constructor(event: FeeRecipientSet) {
    this._event = event;
  }

  get _feeRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LoanFeeSet extends ethereum.Event {
  get params(): LoanFeeSet__Params {
    return new LoanFeeSet__Params(this);
  }
}

export class LoanFeeSet__Params {
  _event: LoanFeeSet;

  constructor(event: LoanFeeSet) {
    this._event = event;
  }

  get _feeSet(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NFTDescriptorSet extends ethereum.Event {
  get params(): NFTDescriptorSet__Params {
    return new NFTDescriptorSet__Params(this);
  }
}

export class NFTDescriptorSet__Params {
  _event: NFTDescriptorSet;

  constructor(event: NFTDescriptorSet) {
    this._event = event;
  }

  get _descriptor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PendingGovernorAccepted extends ethereum.Event {
  get params(): PendingGovernorAccepted__Params {
    return new PendingGovernorAccepted__Params(this);
  }
}

export class PendingGovernorAccepted__Params {
  _event: PendingGovernorAccepted;

  constructor(event: PendingGovernorAccepted) {
    this._event = event;
  }
}

export class PendingGovernorSet extends ethereum.Event {
  get params(): PendingGovernorSet__Params {
    return new PendingGovernorSet__Params(this);
  }
}

export class PendingGovernorSet__Params {
  _event: PendingGovernorSet;

  constructor(event: PendingGovernorSet) {
    this._event = event;
  }

  get _pendingGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SwapFeeSet extends ethereum.Event {
  get params(): SwapFeeSet__Params {
    return new SwapFeeSet__Params(this);
  }
}

export class SwapFeeSet__Params {
  _event: SwapFeeSet;

  constructor(event: SwapFeeSet) {
    this._event = event;
  }

  get _feeSet(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SwapIntervalsAllowed extends ethereum.Event {
  get params(): SwapIntervalsAllowed__Params {
    return new SwapIntervalsAllowed__Params(this);
  }
}

export class SwapIntervalsAllowed__Params {
  _event: SwapIntervalsAllowed;

  constructor(event: SwapIntervalsAllowed) {
    this._event = event;
  }

  get _swapIntervals(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get _descriptions(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }
}

export class SwapIntervalsForbidden extends ethereum.Event {
  get params(): SwapIntervalsForbidden__Params {
    return new SwapIntervalsForbidden__Params(this);
  }
}

export class SwapIntervalsForbidden__Params {
  _event: SwapIntervalsForbidden;

  constructor(event: SwapIntervalsForbidden) {
    this._event = event;
  }

  get _swapIntervals(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GlobalParameters__loanParametersResult_loanParametersStruct extends ethereum.Tuple {
  get feeRecipient(): Address {
    return this[0].toAddress();
  }

  get isPaused(): boolean {
    return this[1].toBoolean();
  }

  get loanFee(): BigInt {
    return this[2].toBigInt();
  }
}

export class GlobalParameters__swapParametersResult_swapParametersStruct extends ethereum.Tuple {
  get feeRecipient(): Address {
    return this[0].toAddress();
  }

  get isPaused(): boolean {
    return this[1].toBoolean();
  }

  get swapFee(): BigInt {
    return this[2].toBigInt();
  }
}

export class GlobalParameters extends ethereum.SmartContract {
  static bind(address: Address): GlobalParameters {
    return new GlobalParameters("GlobalParameters", address);
  }

  FEE_PRECISION(): i32 {
    let result = super.call("FEE_PRECISION", "FEE_PRECISION():(uint24)", []);

    return result[0].toI32();
  }

  try_FEE_PRECISION(): ethereum.CallResult<i32> {
    let result = super.tryCall("FEE_PRECISION", "FEE_PRECISION():(uint24)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MAX_FEE(): BigInt {
    let result = super.call("MAX_FEE", "MAX_FEE():(uint32)", []);

    return result[0].toBigInt();
  }

  try_MAX_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_FEE", "MAX_FEE():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allowedSwapIntervals(): Array<BigInt> {
    let result = super.call(
      "allowedSwapIntervals",
      "allowedSwapIntervals():(uint32[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_allowedSwapIntervals(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "allowedSwapIntervals",
      "allowedSwapIntervals():(uint32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  feeRecipient(): Address {
    let result = super.call("feeRecipient", "feeRecipient():(address)", []);

    return result[0].toAddress();
  }

  try_feeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeRecipient", "feeRecipient():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governor(): Address {
    let result = super.call("governor", "governor():(address)", []);

    return result[0].toAddress();
  }

  try_governor(): ethereum.CallResult<Address> {
    let result = super.tryCall("governor", "governor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  intervalDescription(param0: BigInt): string {
    let result = super.call(
      "intervalDescription",
      "intervalDescription(uint32):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toString();
  }

  try_intervalDescription(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "intervalDescription",
      "intervalDescription(uint32):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isGovernor(_account: Address): boolean {
    let result = super.call("isGovernor", "isGovernor(address):(bool)", [
      ethereum.Value.fromAddress(_account)
    ]);

    return result[0].toBoolean();
  }

  try_isGovernor(_account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isGovernor", "isGovernor(address):(bool)", [
      ethereum.Value.fromAddress(_account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPendingGovernor(_account: Address): boolean {
    let result = super.call(
      "isPendingGovernor",
      "isPendingGovernor(address):(bool)",
      [ethereum.Value.fromAddress(_account)]
    );

    return result[0].toBoolean();
  }

  try_isPendingGovernor(_account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPendingGovernor",
      "isPendingGovernor(address):(bool)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSwapIntervalAllowed(_swapInterval: BigInt): boolean {
    let result = super.call(
      "isSwapIntervalAllowed",
      "isSwapIntervalAllowed(uint32):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_swapInterval)]
    );

    return result[0].toBoolean();
  }

  try_isSwapIntervalAllowed(
    _swapInterval: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSwapIntervalAllowed",
      "isSwapIntervalAllowed(uint32):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_swapInterval)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  loanFee(): BigInt {
    let result = super.call("loanFee", "loanFee():(uint32)", []);

    return result[0].toBigInt();
  }

  try_loanFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("loanFee", "loanFee():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  loanParameters(): GlobalParameters__loanParametersResult_loanParametersStruct {
    let result = super.call(
      "loanParameters",
      "loanParameters():((address,bool,uint32))",
      []
    );

    return result[0].toTuple() as GlobalParameters__loanParametersResult_loanParametersStruct;
  }

  try_loanParameters(): ethereum.CallResult<
    GlobalParameters__loanParametersResult_loanParametersStruct
  > {
    let result = super.tryCall(
      "loanParameters",
      "loanParameters():((address,bool,uint32))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as GlobalParameters__loanParametersResult_loanParametersStruct
    );
  }

  nftDescriptor(): Address {
    let result = super.call("nftDescriptor", "nftDescriptor():(address)", []);

    return result[0].toAddress();
  }

  try_nftDescriptor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nftDescriptor",
      "nftDescriptor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingGovernor(): Address {
    let result = super.call(
      "pendingGovernor",
      "pendingGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pendingGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingGovernor",
      "pendingGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  swapFee(): BigInt {
    let result = super.call("swapFee", "swapFee():(uint32)", []);

    return result[0].toBigInt();
  }

  try_swapFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("swapFee", "swapFee():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  swapParameters(): GlobalParameters__swapParametersResult_swapParametersStruct {
    let result = super.call(
      "swapParameters",
      "swapParameters():((address,bool,uint32))",
      []
    );

    return result[0].toTuple() as GlobalParameters__swapParametersResult_swapParametersStruct;
  }

  try_swapParameters(): ethereum.CallResult<
    GlobalParameters__swapParametersResult_swapParametersStruct
  > {
    let result = super.tryCall(
      "swapParameters",
      "swapParameters():((address,bool,uint32))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as GlobalParameters__swapParametersResult_swapParametersStruct
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _governor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _nftDescriptor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptPendingGovernorCall extends ethereum.Call {
  get inputs(): AcceptPendingGovernorCall__Inputs {
    return new AcceptPendingGovernorCall__Inputs(this);
  }

  get outputs(): AcceptPendingGovernorCall__Outputs {
    return new AcceptPendingGovernorCall__Outputs(this);
  }
}

export class AcceptPendingGovernorCall__Inputs {
  _call: AcceptPendingGovernorCall;

  constructor(call: AcceptPendingGovernorCall) {
    this._call = call;
  }
}

export class AcceptPendingGovernorCall__Outputs {
  _call: AcceptPendingGovernorCall;

  constructor(call: AcceptPendingGovernorCall) {
    this._call = call;
  }
}

export class AddSwapIntervalsToAllowedListCall extends ethereum.Call {
  get inputs(): AddSwapIntervalsToAllowedListCall__Inputs {
    return new AddSwapIntervalsToAllowedListCall__Inputs(this);
  }

  get outputs(): AddSwapIntervalsToAllowedListCall__Outputs {
    return new AddSwapIntervalsToAllowedListCall__Outputs(this);
  }
}

export class AddSwapIntervalsToAllowedListCall__Inputs {
  _call: AddSwapIntervalsToAllowedListCall;

  constructor(call: AddSwapIntervalsToAllowedListCall) {
    this._call = call;
  }

  get _swapIntervals(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _descriptions(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class AddSwapIntervalsToAllowedListCall__Outputs {
  _call: AddSwapIntervalsToAllowedListCall;

  constructor(call: AddSwapIntervalsToAllowedListCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveSwapIntervalsFromAllowedListCall extends ethereum.Call {
  get inputs(): RemoveSwapIntervalsFromAllowedListCall__Inputs {
    return new RemoveSwapIntervalsFromAllowedListCall__Inputs(this);
  }

  get outputs(): RemoveSwapIntervalsFromAllowedListCall__Outputs {
    return new RemoveSwapIntervalsFromAllowedListCall__Outputs(this);
  }
}

export class RemoveSwapIntervalsFromAllowedListCall__Inputs {
  _call: RemoveSwapIntervalsFromAllowedListCall;

  constructor(call: RemoveSwapIntervalsFromAllowedListCall) {
    this._call = call;
  }

  get _swapIntervals(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class RemoveSwapIntervalsFromAllowedListCall__Outputs {
  _call: RemoveSwapIntervalsFromAllowedListCall;

  constructor(call: RemoveSwapIntervalsFromAllowedListCall) {
    this._call = call;
  }
}

export class SetFeeRecipientCall extends ethereum.Call {
  get inputs(): SetFeeRecipientCall__Inputs {
    return new SetFeeRecipientCall__Inputs(this);
  }

  get outputs(): SetFeeRecipientCall__Outputs {
    return new SetFeeRecipientCall__Outputs(this);
  }
}

export class SetFeeRecipientCall__Inputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeRecipientCall__Outputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }
}

export class SetLoanFeeCall extends ethereum.Call {
  get inputs(): SetLoanFeeCall__Inputs {
    return new SetLoanFeeCall__Inputs(this);
  }

  get outputs(): SetLoanFeeCall__Outputs {
    return new SetLoanFeeCall__Outputs(this);
  }
}

export class SetLoanFeeCall__Inputs {
  _call: SetLoanFeeCall;

  constructor(call: SetLoanFeeCall) {
    this._call = call;
  }

  get _loanFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLoanFeeCall__Outputs {
  _call: SetLoanFeeCall;

  constructor(call: SetLoanFeeCall) {
    this._call = call;
  }
}

export class SetNFTDescriptorCall extends ethereum.Call {
  get inputs(): SetNFTDescriptorCall__Inputs {
    return new SetNFTDescriptorCall__Inputs(this);
  }

  get outputs(): SetNFTDescriptorCall__Outputs {
    return new SetNFTDescriptorCall__Outputs(this);
  }
}

export class SetNFTDescriptorCall__Inputs {
  _call: SetNFTDescriptorCall;

  constructor(call: SetNFTDescriptorCall) {
    this._call = call;
  }

  get _descriptor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNFTDescriptorCall__Outputs {
  _call: SetNFTDescriptorCall;

  constructor(call: SetNFTDescriptorCall) {
    this._call = call;
  }
}

export class SetPendingGovernorCall extends ethereum.Call {
  get inputs(): SetPendingGovernorCall__Inputs {
    return new SetPendingGovernorCall__Inputs(this);
  }

  get outputs(): SetPendingGovernorCall__Outputs {
    return new SetPendingGovernorCall__Outputs(this);
  }
}

export class SetPendingGovernorCall__Inputs {
  _call: SetPendingGovernorCall;

  constructor(call: SetPendingGovernorCall) {
    this._call = call;
  }

  get __pendingGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPendingGovernorCall__Outputs {
  _call: SetPendingGovernorCall;

  constructor(call: SetPendingGovernorCall) {
    this._call = call;
  }
}

export class SetSwapFeeCall extends ethereum.Call {
  get inputs(): SetSwapFeeCall__Inputs {
    return new SetSwapFeeCall__Inputs(this);
  }

  get outputs(): SetSwapFeeCall__Outputs {
    return new SetSwapFeeCall__Outputs(this);
  }
}

export class SetSwapFeeCall__Inputs {
  _call: SetSwapFeeCall;

  constructor(call: SetSwapFeeCall) {
    this._call = call;
  }

  get _swapFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSwapFeeCall__Outputs {
  _call: SetSwapFeeCall;

  constructor(call: SetSwapFeeCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
