type GlobalParameters @entity {
  "address"
  id: ID!
  "fee recipient"
  feeRecipient: Bytes
  # "nft descriptor"
  nftDescriptor: Bytes
  "swap fee"
  swapFee: BigInt
  "loan fee"
  loanFee: BigInt
  "fee precision"
  FEE_PRECISION: Int
  "max fee"
  MAX_FEE: BigInt
  # "intervals"
  # allowedIntervals: [SwapInterval!]! @derivedFrom(field: "dcaGlobalParameters")
}

type SwapInterval @entity {
  "interval"
  id: ID!
  "interval"
  interval: BigInt!
  "description"
  description: String!
  # "dca global parameter"
  # dcaGlobalParameters: DCAGlobalParameters!
}

type Pair @entity {
  "address"
  id: ID!
  "token0"
  token0: Token!
  "token1"
  token1: Token!
  "positions"
  positions: [Position!]! @derivedFrom(field: "pair")
}

enum POSITION_STATUS {
  ACTIVE
  TERMINATED
}

type Position @entity {
  "position.id"
  id: ID!
  "from"
  from: Token!
  "to"
  to: Token!
  "pair"
  pair: Pair!
  "swap interval"
  swapInterval: SwapInterval!
  "state"
  current: PositionState!
  "past states"
  history: [PositionState!]! @derivedFrom(field: "position")
  "position status"
  status: POSITION_STATUS!
  "transaction"
  transaction: Transaction!
  "created at block"
  createdAtBlock: BigInt!
  "created at timestamp"
  createdAtTimestamp: BigInt!
  "terminated at block"
  terminatedAtBlock: BigInt
  "terminated at timestamp"
  terminatedAtTimestamp: BigInt
}

type PositionState @entity {
  "position.id-tx.hash-tx.index"
  id: ID!
  "position"
  position: Position!
  "rate"
  rate: BigInt!
  "starting swap"
  startingSwap: BigInt!
  "last swap"
  lastSwap: BigInt!
  "remaining swaps"
  remainingSwaps: BigInt!
  "transaction"
  transaction: Transaction!
  "createdAtBlock"
  createdAtBlock: BigInt!
  "createdAtTimestamp"
  createdAtTimestamp: BigInt!
}

type Transaction @entity {
  "transaction.hash-transaction.index"
  id: ID!
  "The event name / call stacktrace"
  event: String!
  "The transaction sender"
  from: Bytes!
  "Gas price used in the transaction"
  gasPrice: BigInt!
  "Gas sent used in the transaction"
  gasSent: BigInt!
  "Transaction hash"
  hash: Bytes!
  "The transaction index"
  index: BigInt!
  "Address that received the transaction"
  to: Bytes!
  "Ether value sent in the transaction"
  value: BigInt!
  "Timestamp when the transaction was executed"
  timestamp: BigInt!
  "Gas limit used in the transaction"
  gasLimit: BigInt!
  "Block number"
  blockNumber: BigInt!
}

type Token @entity {
  "Token address"
  id: ID!
  "Number of decimals for this Token"
  decimals: Int!
  "Name of the Token"
  name: String!
  "Symbol of the Token"
  symbol: String!
}